{
    "collab_server" : "",
    "contents" : "#********************************************************************************\n# Function to perform SSA\n\nssa_calc <- function(x, dates, L = length(x) %/% 4, q = 1, diagplots = TRUE){\n\n  n <- length(x)\n  # Embed the time series (only use the first L*2 data points!)\n  x.traj <- ts_stack(x[1:(L * 2)], window = L)\n\n  # Centre the columns of the trajectory matrices\n  x.meanvec <- apply(x.traj, 2, mean)\n  x.traj <- scale(x.traj, center = T, scale = F)\n\n  # SVD of the trajectory matrices multiplied by their transpose matrices\n  x.svd2 <- svd(x.traj %*% t(x.traj))\n\n  # Reconstructing the time series prospectively (from time point 2L onwards) using SSA\n  B.red <- x.svd2$v[, 1:q]\n  P.red <- B.red %*% t(B.red)\n\n  x.2L.mean <- mean(x[1:(L * 2)])\n  x.pred.ssa <- rep(NA, times = n)\n\n  # Calculate predicted values for the first 2L time points (already observed)\n  xi <- x[1:(2 * L)]\n  ni <- length(xi)\n  x.part.traj <- ts_stack(c(xi[L:2], xi, xi[(ni-1):(ni - L + 1)]), window = L) # add (L-1) neighbouring months to beginning and end of series, to improve predicted values?\n  x.2L.meanvec <- rep(x.2L.mean, times = ncol(x.part.traj))\n  # Centre the columns of the trajectory matrix\n  x.part.traj <- scale(x.part.traj, center = T, scale = F)\n  x.red.ssa <- outer(rep(1, times = nrow(x.part.traj)), x.2L.meanvec) + P.red %*% x.part.traj\n  x.red.ssa <- hankelize(x.red.ssa)\n  x.pred.ssa.temp <- ts_unstack(x.red.ssa)\n  x.pred.ssa[1:(2 * L)] <- x.pred.ssa.temp[L:(3 * L - 1)]\n\n  for(i in (2 * L + 1):n){\n    # PROPOSAL 1: Use full data set\n    # Embed the time series\n    xi <- x[1:i]\n    ni <- length(xi)\n    x.part.traj <- ts_stack(c(xi[L:2], xi, xi[(ni - 1):(ni - L + 1)]), window = L) # add (L-1) neighbouring months to beginning and end of series, to improve predicted values?\n    x.2L.meanvec <- rep(x.2L.mean, times = ncol(x.part.traj))\n    # Centre the columns of the trajectory matrix\n    x.part.traj <- scale(x.part.traj, center = T, scale = F)\n    x.red.ssa <- outer(rep(1, times = nrow(x.part.traj)), x.2L.meanvec) + P.red %*% x.part.traj\n    x.red.ssa <- hankelize(x.red.ssa)\n    x.pred.ssa.temp <- ts_unstack(x.red.ssa)\n    x.pred.ssa[i] <- x.pred.ssa.temp[L - 1 + i]\n  }\n\n  #x.pred.ssa[x.pred.ssa < 0] <- 0 # set negative predictive values to the minimum possible count of zero\n\n  # Calculate the residuals\n  x.resid.ssa <- x - x.pred.ssa\n\n  if(diagplots){\n    oldpar <- par()\n    par(mfrow = c(2, 2), bty = 'n')\n    # Scree plot of the eigenvalues\n    plot(1:length(x.svd2$d), x.svd2$d, type = 'l',\n         main = 'SSA: Eigenvalue scree plot',\n         xlab = 'Eigenvalue number',\n         ylab = 'Eigenvalue',\n         col = 'black')\n    points(1:length(x.svd2$d), x.svd2$d, pch = 20, cex = 0.8)\n\n    # Histograms of the eigenvalues\n    #hist(x.svd2$d, breaks = 40, col = 'darkgray', main = 'Eigenvalues distribution', xlab = 'Eigenvalue')\n\n    # Proportion of variation accounted for by the first q eigenvectors\n    cat(paste('Proportion of variation accounted for by the first q = ', q, ' eigenvector(s): ',\n              round(sum(x.svd2$d[1:q]) / sum(x.svd2$d), 2), '\\n', sep = ''))\n\n    # Plot: residuals vs. time\n    plot(dates, x.resid.ssa,\n         type = 'p', lty = 3, col = 'black', pch = 20,\n         main = paste('SSA residuals (q = ', q, ')', sep = ''),\n         ylab = 'Residuals', xlab = 'Time')\n    abline(h = 0, lty = 3)\n\n    # Histograms of residuals\n    hist(x.resid.ssa, col = 'darkgray', freq = FALSE,\n         main = paste('SSA residuals (q = ', q, ')', sep = ''),\n         xlab = 'Residuals')\n    lines(density(x.resid.ssa), lwd = 2)\n    abline(v = 0, lty = 3)\n\n    # Q-Q plot of residuals\n    #qqnorm(x.resid.ssa, pch = 20)\n    #qqline(x.resid.ssa)\n\n    # Correlogram of the SSA residuals\n    acf(x = x.resid.ssa, lag.max = L, main = 'SSA residuals: Correlogram')\n\n    par(mfrow = oldpar$mfrow, bty = oldpar$bty)\n  }\n\n  return(list(q = q, L = L, dates = dates, obs = x, exp = x.pred.ssa))\n}\n\n#********************************************************************************\n",
    "created" : 1468492672745.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "664400864",
    "id" : "B09BEEDF",
    "lastKnownWriteTime" : 1468504074,
    "last_content_update" : 1468504074296,
    "path" : "~/Werk/Software/ssaCUSUM/R/ssa_calc.R",
    "project_path" : "R/ssa_calc.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}