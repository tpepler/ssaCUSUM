{
    "collab_server" : "",
    "contents" : "#********************************************************************************\n# Function to plot a CUSUM chart\n\nplot_cusum <- function(cusum.obj, main = NULL, eps.out = NULL){\n  # cusum.obj: CUSUM object, as output from cusum.calc\n\n  # Calculate outbreak start and end dates\n  outbreak.start <- NULL\n  outbreak.end <- NULL\n  for(i in 2:length(cusum.obj$obs)){\n    if(cusum.obj$outbreak[i - 1] == FALSE & cusum.obj$outbreak[i] == TRUE){\n      outbreak.start <- append(outbreak.start, cusum.obj$dates[i])\n    }\n    else {\n      if(cusum.obj$outbreak[i - 1] == TRUE & cusum.obj$outbreak[i] == FALSE){\n        outbreak.end <- append(outbreak.end, cusum.obj$dates[i - 1])\n      }\n    }\n  }\n  # In case of outbreak spanning the full time series\n  if(is.null(outbreak.start) & cusum.obj$outbreak[1] == TRUE){\n    outbreak.start <- cusum.obj$dates[1]\n  }\n  # For outbreaks continuing to the end of the time series\n  if(!is.null(outbreak.start)){\n    if(length(outbreak.end) < length(outbreak.start)){\n      outbreak.end <- append(outbreak.end, cusum.obj$dates[length(cusum.obj$obs)])\n    }\n  }\n\n  # Plot the CUSUM chart\n  oldpar <- par()\n  #layout(matrix(c(1, 2), ncol = 1))\n  par(mfrow = c(2, 1),\n    mar = c(3, 4.5, 4, 1))\n  if(!is.null(eps.out)){\n    setEPS()\n    postscript(eps.out[1], width = 8, height = 5)\n  }\n  if(!is.null(main)){cusum.title <- paste(main, ': Control chart', sep = '')}\n  else{cusum.title <- 'Control chart'}\n  if(sum(cusum.obj$outbreak) > 0){\n    plot(x = c(cusum.obj$dates), y = c(cusum.obj$cusumvals), type = 'n',\n         xlab = '', ylab = 'CUSUM', main = cusum.title,\n         ylim = c(0, max(cusum.obj$h, cusum.obj$cusumvals) * 1.1),\n         panel.first = rect(xleft = outbreak.start, ybottom = -1e6, xright = outbreak.end, ytop = 1e6, col = 'gray80', border = NA))\n  }\n  else{\n    plot(x = c(cusum.obj$dates), y = c(cusum.obj$cusumvals), type = 'n',\n         xlab = '', ylab = 'CUSUM', main = cusum.title,\n         ylim = c(0, max(cusum.obj$h, cusum.obj$cusumvals) * 1.1))\n  }\n  lines(x = cusum.obj$dates, y = cusum.obj$cusumvals)\n  points(x = cusum.obj$dates, y = cusum.obj$cusumvals, pch = 20)\n  abline(h = 0, lty = 2)\n  abline(h = cusum.obj$h, lty = 2, col = 'red')\n  #points(x=cusum.obj$dates[cusum.obj$outbreak],y=cusum.obj$cusumvals[cusum.obj$outbreak],pch=20,col='darkorange')\n  points(x = cusum.obj$dates[cusum.obj$alarms], y = cusum.obj$cusumvals[cusum.obj$alarms], pch = 4, col = 'red', lwd = 3)\n  abline(v = cusum.obj$dates[cusum.obj$alarms], lty = 3, col = 'red')\n  if(!is.null(eps.out)){dev.off()}\n\n  # Plot the time series data\n  par(mar = c(5, 4.5, 4, 1))\n  if(!is.null(eps.out)){\n    setEPS()\n    postscript(eps.out[2], width = 8, height = 5)\n  }\n  if(!is.null(main)){cusum.title <- paste(main, ': Time series (q = ', cusum.obj$q, ')', sep = '')}\n  else{cusum.title <- paste('Time series (q = ', cusum.obj$q, ')', sep = '')}\n  if(sum(cusum.obj$outbreak) > 0){\n    plot(cusum.obj$dates,cusum.obj$obs,\n         type = 'S', lty = 1, col = 'black',\n         main = cusum.title,\n         xlab = '',\n         ylab = 'Number of events',\n         panel.first = rect(xleft = outbreak.start, ybottom = -1e6, xright = outbreak.end, ytop = 1e6, col = 'gray80', border = NA))\n  }\n  else{\n    plot(cusum.obj$dates, cusum.obj$obs,\n         type = 'S', lty = 1, col = 'black',\n         main = cusum.title,\n         xlab = '',\n         ylab = 'Number of events')\n  }\n  lines(cusum.obj$dates[1:(cusum.obj$L * 2)], cusum.obj$exp[1:(cusum.obj$L * 2)], type = 'l', col = 'blue', lwd = 2)\n  lines(cusum.obj$dates[(cusum.obj$L * 2):length(cusum.obj$obs)], cusum.obj$exp[(cusum.obj$L * 2):length(cusum.obj$obs)],\n        type = 'l', col = 'blue', lwd = 2, lty = 3)\n  if(sum(cusum.obj$outbreak) > 0){\n    abline(v = cusum.obj$dates[cusum.obj$alarms], col = 'red', lwd = 2)\n  }\n  #temp<-locator(1)\n  #print(temp)\n  legend(x = cusum.obj$dates[1],\n         y = min(cusum.obj$obs) - (max(cusum.obj$obs) - min(cusum.obj$obs)) / 5,\n         #y = temp$y,\n         legend = c('Observed counts', 'Estimated signal', 'Predicted signal', 'Alarm', 'Out-of-control'),\n         lty = c(1, 1, 3, 1, 1), lwd = c(1, 2, 2, 2, 12), col = c('black', 'blue', 'blue', 'red', 'gray80'),\n         cex = 0.7,\n         #fill=c(NA,NA,NA,NA,'gray80'),\n         border = NA,\n         bty = 'n',\n         xpd = TRUE,\n         horiz = TRUE)\n\n  par(mfrow = oldpar$mfrow, mar = oldpar$mar)\n  if(!is.null(eps.out)){dev.off()}\n}\n\n#********************************************************************************\n",
    "created" : 1468492623545.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "146610078",
    "id" : "6514FDF8",
    "lastKnownWriteTime" : 1468505112,
    "last_content_update" : 1468505112946,
    "path" : "~/Werk/Software/ssaCUSUM/R/plot_cusum.R",
    "project_path" : "R/plot_cusum.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}